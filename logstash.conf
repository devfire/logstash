input {
  sqs {
    region => "${REGION}"
    queue => "${QUEUE_NAME}"
    type => "datahub"
  }
  tcp {
    port => 6000
    type => syslog
  }
#  kinesis {
#    region => "${REGION}"
#    kinesis_stream_name => DataHubLogs
#    type => "datahub"
#  }
}

filter {
  if [type] in ["datahub"] {
    grok {
        match => { "message" => "%{TIMESTAMP_ISO8601}\t%{UUID:[lambda][request_id]}\t%{GREEDYDATA:message}" }
        overwrite => [ "message" ]
        tag_on_failure => []
    }

    grok {
        match => { "message" => "(?:START|END) RequestId: %{UUID:[lambda][request_id]}" }
        tag_on_failure => []
    }

    grok {
        match => { "message" => "REPORT RequestId: %{UUID:[lambda][request_id]}\tDuration: %{BASE16FLOAT:[lambda][duration]} ms\tBilled Duration: %{BASE16FLOAT:[lambda][billed_duration]} ms \tMemory Size: %{BASE10NUM:[lambda][memory_size]} MB\tMax Memory Used: %{BASE10NUM:[lambda][memory_used]} MB" }
        tag_on_failure => []
    }

    mutate {
        convert => {
            "[lambda][duration]" => "integer"
            "[lambda][billed_duration]" => "integer"
            "[lambda][memory_size]" => "integer"
            "[lambda][memory_used]" => "integer"
        }
    }

    #check to see if message is in JSON or not
    if [message] =~ /^{.*}$/ {
       json {
          source => "message"
       }
    }
  }

  if [type] == "syslog" {
    grok {
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{WORD:loglevel} %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}

output {
  elasticsearch {
      hosts => [ "${ES_DEFAULT_URL}:${ES_DEFAULT_PORT}" ]
      index => "%{type}-%{+YYYY.MM.dd}"
  }

  if [destination] == 'liaison' {
    elasticsearch {
      hosts => [ "${ES_LIASON_URL}:${ES_LIASON_PORT}" ]
      index => "%{type}-%{+YYYY.MM.dd}"
    }
  }
}
